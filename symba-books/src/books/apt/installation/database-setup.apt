 ---
 Setting Up the FuGE Hibernate STK database
 ---
 Allyson Lister
 ---
 June 2011

Maven Profiles

 SyMBA makes use of two Maven profiles within the top-level <<<pom.xml>>>:
 the <<<production>>> profile and the <<<test>>> (val) profile. The production profile should contain all of the
 connection details for your main database, while the test profile should contain all of the details for your
 unit testing and general testing database.

 In this way, you don't have to constantly be changing the values in your pom.xml when you are switching between
 a testing environment and your normal environment. This page shows you how to set the values for each of these
 profiles.

 The production profile is identified within the <<<pom.xml>>> with the term "production", and is run whenever
 the "environment" variable is set to the value <<<production>>> (e.g. on the mvn command line,
 <<<-Denvironment=production>>>):

+---+
 [...]
    <profiles>
        <profile>
            <id>production</id>
             <activation>
                <property>
                    <name>environment</name>
                    <value>production</value>
                </property>
             </activation>
 [...]
+---+

 The testing profile is identified within the <<<pom.xml>>> with the term "validation" (short name "val") and the
 default activation setting:

+---+
 [...]
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
 [...]
+---+

 By default, no unit tests will be performed when the production profile is in use. If you plan to run the unit
 tests, then please make both a production and a test database using the steps below.

Create a database to hold the metadata

  If you have installed the default PostgreSQL database using Ubuntu's apt-get method, then please ensure
  you have completed the standard setup as described on the {{{https://help.ubuntu.com/community/PostgreSQL}Ubuntu
  documentation pages}}.

* Production Profile

                    Create a database inside your chosen DBMS entitled, for example, "symba". You will also need to
                    have access to a database user that is the owner of this database, e.g create a new user
                    called "symba" that you use specifically for accessing and modifying the metadata database.
                    Modify the following elements in the top-level <<<pom.xml>>> located at
                    <<<your-checkout/trunk/pom.xml>>> for the profile with the "production" id. This will change the
                    jdbc connection details to a value suitable for your database connection, and also provide the
                    STK with your database username and password:

+---+
                    <jdbc.url>
                    </jdbc.url>

                    <jdbc.username></jdbc.username>
                    <jdbc.password></jdbc.password>
+---+

* Testing (Default) Profile

 Follow the same steps as above, but making the changes in the variables within the test profile rather than
 the production profile.

Point Maven at the correct jdbc jar

* Production Profile

                    Modify the following elements in the top-level <<<pom.xml>>> located at
                    <<<your-checkout/trunk/pom.xml>>> for the profile with the "production" id. This will ensure
                    that the STK is pointed at the appropriate location for your jdbc jar
                    and the appropriate class name for your jdbc driver:

+---+
                <jdbc.driver>
                </jdbc.driver>

                <jdbc.driver.jar>
                </jdbc.driver.jar>
+---+

  The values of these elements will depend on what database type you've chosen to use. For example, the value
  of <<jdbc.driver>> would be <<<org.postgresql.Driver>>> for PostgreSQL, and <<<com.mysql.jdbc.Driver>>> for
  MySQL.

* Testing (Default) Profile

 Follow the same steps as above, but making the changes in the variables within the test profile rather than
 the production profile.
