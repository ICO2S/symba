 ---
 Tips and Tricks: Maven 2
 ---
 Allyson Lister
 ---
 July 2008

Using the Maven 2 exec:java Command

    When running main() methods within SyMBA, you have a variety of choices for how they can be called. You can use
    java from the command-line, but that requires that you specify the huge classpath that will be needed for that
    class. You could also run from within your IDE, but then you are using the IDE's classpath, and not the identical
    one that is created by Maven for the various SyMBA jars.

    How, then, can you ensure that you run these Java classes using the same classpath that was used to build
    SyMBA in the first place? The answer is to use Maven to run your classes, in the same way that you use Maven to
    build your project. You do this with the <<mvn exec:java>> plugin. Details of this plugin are available
    from the {{http://mojo.codehaus.org/exec-maven-plugin/java-mojo.html}Developer's website}}.

    Let's take the example of loading the Sample People into the SyMBA Database. The command should be run from within
    the symba-mapping/ subdirectory. It is as found in the
    <<<symba-mapping/README.txt>>> file is:

+---+
  mvn exec:java -Dexec.mainClass="net.sourceforge.symba.mapping.hibernatejaxb2.UnmarshalPeople" -Dexec.args="xml/samples/SamplePeople.xml"
+---+

* Specifying the Full Name for exec:java

    Sometimes, you may get an error message from Maven stating that it cannot find the exec plugin. This especially
    seems to happen in Windows systems. In these cases, you can call the plugin using its full name, as in the
    example below:

+---+
  mvn org.codehaus.mojo:exec-maven-plugin:1.1:java -Dexec.mainClass="net.sourceforge.symba.mapping.hibernatejaxb2.UnmarshalPeople" -Dexec.args="xml/samples/SamplePeople.xml"
+---+

    If you still have problems, please contact symba-devel@lists.sourceforge.net.