<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
    <properties>
        <author email="allysonlister.AT.users.DOT.sourceforge.DOT.net">Allyson Lister</author>
        <author email="ollyshaw.AT.users.DOT.sourceforge.DOT.net">Olly Shaw</author>
        <title>Instructions for Installing SyMBA</title>
    </properties>
    <meta name="keyword"
          content="SyMBA, Systems Biology, Data Archive, CISBAN, FuGE, Computational Biology, Ageing, Aging, Nutrition, Kirkwood, Biological Modelling, Biological Modeling"/>
    <body>
Thank you for your interest in the CISBAN Systems and Molecular Biology Archive
(hereafter known as SyMBA).
<br/>
<section name="Introduction">

<subsection name="Website &amp; Contact Information">

<p>
You can find more information, plus the latest version of this document, at
<a href="http://symba.sourceforge.net" target="_blank" title="http://symba.sourceforge.net">http://symba.sourceforge.net</a>
Contact us via email at symba-devel@lists.sourceforge.net
</p>

<source>
CISBAN
Henry Wellcome Laboratory for Biogerontology Research
Newcastle University
Newcastle General Hospital
Newcastle upon Tyne

NE4 6BE
United Kingdom
</source>
</subsection>

<subsection name="Background">
<p>
  The Centre for Integrated Systems Biology of Ageing and Nutrition (CISBAN) has
  developed a Systems and Molecular Biology Archive (SyMBA) based on the
  Functional Genomics Object Model and which archives, stores, and retrieves raw
  high-throughput data. Until now, few published systems have successfully
  integrated multiple omics data types and information about experiments in a
  single database. An archive was needed at the Centre, and choosing an emerging
  data standard such as the Functional Genomics Object Model was a practical
  choice. Not only does such a model provide a structure for the database, but
  it also provides a format that can be easily exchanged and compared. Using the
  Functional Genomics Object Model provides a quicker development time for the
  data archive in the short term, and also provides an export format that is
  easy to extend and share in the longer term.
</p>

SyMBA is based on the

<a href="http://fuge.sourceforge.net/dev/index.php#beta_STK_m3" target="_blank" title="FuGE M3 STK">FuGE
M3 STK</a>, written primarily by Andy Jones with additions by Allyson Lister and
Olly Shaw. Some of the instructions are taken directly from this and other
documents (links at the bottom of this document), however a large part of this
installation is unique to SyMBA.
</subsection>
</section>

  <section name="Installation">


  <subsection name="Download and Installation of Required Software">

<p>
SyMBA can be installed on either Windows or linux, but we highly recommend a
linux system. While the FuGE STK that this is based on has been tested on both
systems, SyMBA has <i>only</i> been tested and run on a linux system.
</p>
<p>
These instructions are loosely based on [1] and [2], but have been modified to
suit the needs of SyMBA. Please note that we only recommend MySQL or PostgreSQL
for the database choice, as these are the only two that have been tested with
SyMBA.
</p>

<ol>
  <li>
    <b>Java. </b>Install J2SE Development Kit 5.0 (JDK 5.0) from
    <a href="http://java.sun.com/j2se/1.5.0/download.jsp" target="_blank" title="New Window">here</a>.

    Make sure that the <code>
            JAVA_HOME
        </code> environment variable is pointing to the directory
    where you installed the JDK.
  </li>
  <li>
    <b>Maven2. </b>Download and install Maven 2.0.7 or later from this site:
    <a href="http://maven.apache.org/maven-1.x/start/download.html" target="_blank" title="New Window">http://maven.apache.org/download.html.</a>
  </li>

  <li>
    <b>Maven2 Setup. </b>Create a directory in your home directory called .m2
    with a single file inside called
    <code>settings.xml</code>. This is what
    my <code>settings.xml </code>looks like:
              <source>
            &lt;localRepository&gt;/media/share/synched/Documents/.m2/repository/&lt;/localRepository&gt;

                &lt;proxies&gt;

                 &lt;proxy&gt;
                    &lt;active&gt;true&lt;/active&gt;

              &lt;protocol&gt;http&lt;/protocol&gt;


              &lt;host&gt;<a href="http://wwwcache.ncl.ac.uk/" target="_blank">my.proxy.host</a>&lt;/host&gt;
                    &lt;port&gt;8080&lt;/port&gt;
                  &lt;/proxy&gt;

                &lt;/proxies&gt;
                &lt;mirrors&gt;
                  &lt;mirror&gt;

              &lt;id&gt;<a href="http://ibiblio.org/" target="_blank">ibiblio.org</a>&lt;/id&gt;

                    &lt;name&gt;ibiblio Mirror of
              <a href="http://repo1.maven.org/maven2/" target="_blank">http://repo1.maven.org/maven2/</a>&lt;/name&gt;

              &lt;url&gt;<a href="http://mirrors.ibiblio.org/pub/mirrors/maven2" target="_blank">
              http://mirrors.ibiblio.org/pub/mirrors/maven2</a>&lt;/url&gt;


              &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;
                  &lt;/mirror&gt;
                  &lt;mirror&gt;


              &lt;id&gt;<a href="http://sateh.com/" target="_blank">sateh.com</a>&lt;/id&gt;

              &lt;url&gt;<a href="http://maven.sateh.com/repository" target="_blank">http://maven.sateh.com/repository</a>&lt;/url&gt;

              &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;

                    &lt;!-- The Netherlands, Amsterdam
              --&gt;
                  &lt;/mirror&gt;
                &lt;/mirrors&gt;
              &lt;/settings&gt;
            </source>

    All sections are optional. However, depending on your circumstances, you may
    wish to use one or more of these settings.  The "localRepository" element
    names a location separate from the default home directory for the Maven2
    repository. This may be beneficial if you have limited space on your home
    directory, as this repository directory can grow quite large. The "proxies"
    element should only be used for those developers who must access the
    internet via a proxy. The "mirrors" section is useful to have in case the
    primary central Maven2 server is offline for some reason.
  </li>
    <li><b>Environment Variables and Settings for Maven.</b>
    Set up the environment variable M2_HOME to point to your maven installation
    directory, and then ensure that both $M2_HOME/bin and $JAVA_HOME/bin are
    present in your PATH. You may optionally specify M2_REPO, which is the
    location of your Maven2 repository, if neither in the default location nor
    stated in the <code>settings.xml</code> file.
    </li>
  <li>
    <b>Test Maven2 (Part One). </b>You'll know if you've gotten this right if,
    when you run mvn --version, you something similar (but not necessarily
    identical) to the following:
  </li>
  <ol>
    <li>
        <source>
              $ mvn --version
              Maven version: 2.0.7
              Java version: 1.5.0_08
              OS name: "linux" version: "2.6.17-12-386" arch: "i386"
        </source>
    </li>
  </ol>
  <li>
    <b>Test Maven2 (Part Two). </b>Check
    that Maven2 is working properly by creating a temporary, empty project with
    the following command:

      <source>
           mvn archetype:create -DgroupId=testapp -DartifactId=testapp
      </source>
      Check for the<tt> BUILD SUCCESSFUL</tt> message and, once you have received this message, please
      delete the created <tt>testapp </tt>folder.
  </li>
  <li>
    <b>AndroMDA. </b>This is the only AndroMDA artifact that we will install
    explicitly. All other artifacts, such as AndroMDA cartridges, will be
    automatically downloaded by the Maven2 scripts generated by the plugin.
    Install the plugin by following the steps below.
  </li>
  <ol>
    <li>
      Click
      <a href="http://team.andromda.org/maven2/org/andromda/maven/plugins/andromdapp-maven-plugin/3.2/andromdapp-maven-plugin-install-3.2.zip">
      here</a> to download the the AndroMDA plugin installer.
    </li>

    <li>
      Unzip the contents of the installer into your Maven repository at $M2_REPO
      (or whatever you have set "localRepository" to be, or by default, it
      resides in your-home-dir/.m2/repository).
    </li>
    <li>
      Verify that the following directory was created (switch the slashes around
      for Windows):
      $M2_REPO/<code>org/andromda/maven/plugins/andromda-maven-plugin</code>
    </li>
    <li>

      Create a temporary directory, e.g. <code>C:\andromda-temp</code> or <code>$HOME/andromda-temp</code>.
    </li>
    <li>
      Create a file called <code>pom.xml</code> in this directory with the following content.
              <source>
                  &lt;project&gt;
                  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
                  &lt;groupId&gt;samples.test&lt;/groupId&gt;
                  &lt;artifactId&gt;test&lt;/artifactId&gt;
                  &lt;version&gt;1.0&lt;/version&gt;
                  &lt;packaging&gt;jar&lt;/packaging&gt;
                  &lt;name&gt;test&lt;/name&gt;
                  &lt;build&gt;
                  &lt;defaultGoal&gt;compile&lt;/defaultGoal&gt;
                  &lt;plugins&gt;
                  &lt;plugin&gt;
                  &lt;groupId&gt;org.andromda.maven.plugins&lt;/groupId&gt;
                  &lt;artifactId&gt;andromdapp-maven-plugin&lt;/artifactId&gt;
                  &lt;version&gt;3.2&lt;/version&gt;
                  &lt;/plugin&gt;
                  &lt;/plugins&gt;
                  &lt;/build&gt;
                  &lt;repositories&gt;
                  &lt;repository&gt;
                  &lt;id&gt;andromda&lt;/id&gt;
                  &lt;name&gt;AndroMDA Repository&lt;/name&gt;
                  &lt;url&gt;http://team.andromda.org/maven2&lt;/url&gt;
                  &lt;/repository&gt;
                  &lt;/repositories&gt;
                  &lt;pluginRepositories&gt;
                  &lt;pluginRepository&gt;
                  &lt;id&gt;andromda&lt;/id&gt;
                  &lt;name&gt;AndroMDA Repository&lt;/name&gt;
                  &lt;url&gt;http://team.andromda.org/maven2&lt;/url&gt;
                  &lt;/pluginRepository&gt;
                  &lt;/pluginRepositories&gt;&lt;/project&gt;
</source>
  </li>
    <li>

        Open a Command Prompt in the directory where you created this pom.xml
        and run the command mvn without any arguments. Make sure the command
        completes successfully by displaying the
        <code>BUILD SUCCESSFUL
        </code>message.
    </li>
    <li>
        You can now delete the temporary directory you just created.
    </li>
  </ol>
  <li>
    <b>UML Tool. </b>You will probably want a UML tool to use if you wish to
    manipulate the UML at all. If this is important to you, andromda has been
    tested with both
    <a href="http://galaxy.andromda.org/docs/getting-started/java/resources/uml-tools/argouml/install.html" target="_blank" title="New Window">ArgoUML
    0.20</a> and
    <a href="http://galaxy.andromda.org/docs/getting-started/java/resources/uml-tools/magicdraw/install.html" target="_blank" title="New Window">MagicDraw
    9.5</a>, though SyMBA has only used and recommends the
    MagicDraw line of editors. As SyMBA uses FuGE Milestone 3 in UML 1.4, you
    must use MagicDraw 9.5 rather than the newer versions. Future work includes
    upgrading to
    UML2.<a href="http://galaxy.andromda.org/docs/getting-started/java/resources/uml-tools/magicdraw/install.html" target="_blank" title="New Window">

    </a>
    <p>
    </p>
  </li>
  <li>
    <b> Installation of a Supported Database.</b> You must choose a database
    that is supported by Hibernate. Databases used in the creation of SyMBA
    include PostgreSQL and MySQL. SyMBA has been extensively tested on
    PostgreSQL and less extensively tested on MySQL.
  </li>
</ol>

    <ul>
      <li>
        <b>PostgreSQL
        (</b><a href="http://www.postgresql.org/download/" target="_blank">http://www.postgresql.org/download/</a><b>)
        is recommended and these instructions use PostgreSQL</b>. It is not
        required, but it is recommended that you also install a graphical
        database browser such as pgAdminIII or PhpPgAdmin, both available from
        the url above. The JDBC driver should come with the download.
      </li>

      <li>
        MySQL
        (<a href="http://dev.mysql.com/downloads/" target="_blank">http://dev.mysql.com/downloads/</a>).
        phpMyAdmin
          (<a href="http://www.phpmyadmin.net/home_page/downloads.php">http://www.phpmyadmin.net/home_page/downloads.php</a>) is
        suggested as the GUI for MySQL. If using MySQL, the jdbc driver can be
        downloaded at:
        <a href="http://dev.mysql.com/downloads/connector/j/3.1.html">http://dev.mysql.com/downloads/connector/j/3.1.html</a>
      </li>
    </ul>

</subsection>
  <subsection name="Checkout from Subversion">

<p>
    <b>Instructions for Subversion checkout</b> are available on the 
      <a href="source-repository.html">Source Repository</a> help page.
</p>
</subsection>
        </section>
<section name="Local Setup">

<subsection name="Create a database to hold the metadata and security information">
<ol>
  <li>
    <b>Create an appropriate database. </b>Create a database inside
    your chosen DBMS entitled "symba". If you wish an alternative name for your
    database, modify the following elements in the
    top-level <code>pom.xml</code> located at <code>your-checkout/trunk/pom.xml</code>,
    and add your username and password to the
    pom:
    <source>
            &lt;jdbc.url&gt;
            &lt;/jdbc.url&gt;

            &lt;<code>jdbc.username</code>&gt;&lt;/<code>jdbc.username</code>&gt;
            &lt;jdbc.password&gt;&lt;/jdbc.password&gt;
      </source>
  </li>
  <li>
    <b>Create an appropriate login database.</b> Create a login
    database inside your chosen DBMS entitled "symba_security", or anything else
    you wish. All this has is a single table with login details, and remains
    intentionally separate from the FuGE-based database as it is not part of
    FuGE. The database table should be created with the following command if
    using PostgreSQL - please modify accordingly if using another database:

<source>
            create table users (
            user_name CHARACTER_VARYING(1024) not null,
            password CHARACTER_VARYING(1024) not null,
            lsid CHARACTER_VARYING(1024) not null,

            primary key (lsid)
            );
</source>
  </li>
  <li>

    <b>Tell the front-end about the jdbc connection url.</b> Modify the
    following line (<b>bolded</b>) in <code>your-checkout/trunk/webapp/src/main/webapp/verify.jsp</code>:
<source>
            &lt;sql:setDataSource
                driver="org.postgresql.Driver"

            <b>url="jdbc:postgresql://your.machine:yourport/symba_security"
               user=""
               password=""

            /&gt;
            </b>
</source>

  </li>
</ol>
</subsection>
<subsection name="Create a file system directory to hold the raw data.">
<ol>
  <li>
    While the database holds all experimental metadata, it does not hold the raw
    experimental data. Instead we chose to keep the raw data separate to reduce
    the size of the relational database. Currently, the location and name of the
    directory should be entered into the webapp/src/main/webapp/verify.jsp. This
    is a temporary location. You need to change the following lines to something
    appropriate to your file system:
<source>
                scp.setDirectory( "" );
                scp.setHostname( "" );
                scp.setUsername( "" );

                scp.setPassword( "" );
</source>
</li>
</ol>

</subsection>
</section>
<section name="Compilation">

<ol>
  <li>
    Ensure that you add the following two Jars to your mvn repository:
    lsid-client-1.1.3.jar; ganymed-ssh2-build210.jar. These jars are available
    from within the trunk/backend/src/main/lib/ directory of the subversion
    project. Change into that directory, and then copy them to your maven2
    repository using the following commands:
<source>
            mvn install:install-file -Dfile=lsid-client-1.1.3.jar
            -DgroupId=com.ibm -DartifactId=lsid-client -Dversion=1.1.3
            -Dpackaging=jar -DgeneratePom=true
            mvn install:install-file -Dfile=ganymed-ssh2-build210.jar
            -DgroupId=ch.ethz.ssh2 -DartifactId=ganymed-ssh2 -Dversion=build210
            -Dpackaging=jar -DgeneratePom=true
</source>
  </li>
  <li>
    <font color="#33cc00">OPTIONAL</font>: If you wish to make changes to the
    SyMBA UML prior to generating the code, the UML may be found in
    trunk/mda/src/main/uml/symba.xmi and you should do it at this time.
    <b>Ensure that your UML diagram can find the AndroMDA zips.</b>

    When you open up the SyMBA UML diagram, MagicDraw will prompt you to define
    the location of the AndroMDA zips: they are in your maven repository. You
    may also do a global search-and-replace directly on the UML file, if you are
    careful.
  </li>
  <li>
    Change into the top-level trunk/ directory. Generate all of the
    automatically-generated AndroMDA sources:
<source>
            mvn install
</source>
      You should see a "BUILD SUCCESSFUL" message at the end of it. <b>You must
      be connected to the internet for this step to work, as there will be many
      jars that need to be downloaded.</b>

  </li>
  <li>
    There are further AndroMDA-specific maven commands in the trunk/readme.txt
    generated by AndroMDA. This includes the commands necessary to create the
    tables in the database, reproduced here:
<source>
          mvn -f core/pom.xml andromdapp:schema -Dtasks=create
</source>
  </li>
  <li>
    You now have all auto-generated code. The war file for your tomcat server
    will be found in trunk/webapp/target after the <b>mvn install</b> command
    has successfully been run.
  </li>

  <li>
    There are some commands prepared for you in trunk/backend/README.txt that
    will help you load sample people and sample protocols into your new
    database. You can use these samples to guide the creation of your own people
    and template protocols.
  </li>
  <li>
    Once you have loaded your people into the SyMBA database, you will also need
    to tell your <b>symba_security</b> database about those people. The Java
    class <b>uk.ac.cisban.symba.backend.util.conversion.xml.SecurityPeopleLoader</b> will help you load
    people in, and create initial passwords for them.
  </li>
  <li>

    By default this will utilize CISBAN's LSID authority for assigning new LSIDs
    to your FuGE objects. To create your own LSID authority, you may choose to
    use the LSID toolkit provided by IBM.
  </li>
</ol>
</section>
        <section name="Integration of SyMBA with your favourite IDE">

<p>
  You can auto-generate Java IDE project files using maven2. For example, to
  autogenerate IntelliJ files (please do this <i>after</i> successfully
  installing using the instructions in Section III) change directory to the
  top-level SyMBA/trunk directory and run the following command:
</p>
<source>
        mvn idea:idea
</source>
  There are other similar commands for IDEs such as Eclipse. Details can be
  found on the
  <a href="http://maven.apache.org" target="_blank">Maven</a>

  website.
</section>
  <section name="Future plans">


<ul>
  <li>
    <font color="#33cc00">completed</font> - Propogation to sourceforge.net,
    including the subversion repository there
  </li>
  <li>
    <font color="#33cc00">completed</font> - inclusion of other interested
    programmers once SyMBA is a sourceforge project
  </li>

  <li>
    upgrading to FuGE Version 1, which also means upgrading the following:
  </li>
  <ul>
    <li>
      <font color="#33cc00">completed</font> - maven 1.0.2 to maven 2
    </li>
    <li>
      andromda 3.2-SNAPSHOT to andromda 4
    </li>

    <li>
      UML 1.4 to UML 2
    </li>
  </ul>
  <li>
    Increased Search facilities including:
  </li>
  <ul>
    <li>

      friendly names
    </li>
    <li>
      experiment names
    </li>
    <li>
      hypotheses
    </li>
    <li>
      conclusions
    </li>

    <li>
      joining these searches together
    </li>
    <li>
      pre-loading of correct file type, filename, multi-select menus if you go
      back to a page, or to select at the beginning of a deposition
    </li>
    <li>
      linking of experiments together
    </li>

  </ul>
  <li>
    Expandable hierarchy of Experiment List, rather than just a table view
  </li>
  <li>
    Creation of the front-end "Protocol Wizard", which will simplify addition of
    Protocols to SyMBA. Currently protocols can only be loaded directly from the
    command line into the database.
  </li>
  <li>
    Admin pages, for example the Protocol Wizard might need to be restricted to
    users with admin access.

  </li>
  <li>
    Color-coding the experiment list by protocol/workflow type
  </li>
  <li>
    Re-build LSID authority (and add notes) from http://lsids.sourceforge.net
  </li>
  <li>
    Unit tests as part of maven that will check:
  </li>

  <ul>
    <li>
      database connections (security and standard database)
    </li>
    <li>
      ssh connection to file store
    </li>
    <li>
      lsid authority connection

    </li>
  </ul>
  <li>
    set this namespace property to get all code to be
    templated in Java 1.5 style:
    <a href="http://galaxy.andromda.org/docs/andromda-metafacades/andromda-uml-metafacades/andromda-metafacades-uml14/namespace.html#enableTemplating" target="_blank">http://galaxy.andromda.org/docs/andromda-metafacades/andromda-uml-metafacades/andromda-metafacades-uml14/namespace.html#enableTemplating</a>
  </li>
    <li>
        Have proper error-checking in place for using different servers that have very different dates set.
        This may result in problems with loading protocols from one server onto a database on a second server.
    </li>
</ul>
</section>

<section name="Resources used in the creation of this document">


[1]
<a href="http://wiki.ficcs.org/ficcs/FuGE-to-XSD" target="_blank" title="http://wiki.ficcs.org/ficcs/FuGE-to-XSD, accessed 6 August 2007.">http://wiki.ficcs.org/ficcs/FuGE-to-XSD</a>,
accessed 6 August 2007.<br/>
[2]
<a href="http://galaxy.andromda.org/index.php?option=com_content&amp;task=view&amp;id=105&amp;Itemid=89" target="_blank" >http://galaxy.andromda.org/index.php?option=com_content&amp;task=view&amp;id=105&amp;Itemid=89</a>,
accessed 6 August 2007.

</section>
</body>
</document>