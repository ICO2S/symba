<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:2c41ee6e-a8c0-42e2-a09f-9be44bc11b98" author="Allyson Lister, a.l.lister@newcastle.ac.uk" title="GetSymbaLsidMetadata">More information is available from http://symba.sf.net

This webservice is not directly used within SyMBA, but is instead available as part of ongoing work to have the SyMBA LSID webservices conform to the LSID specification (http://lsids.sourceforge.net/quick-links/lsid-spec/). It can also be used by people wishing to access the SyMBA database directly, via programmatic means, rather than via the web interface.

This workflow's purpose is to retrieve information on versioning for the given LSID. If the LSID references an Identifiable or Endurant object, it will return the LSID of the most-recent Identifiable object associated with the same Endurant. This may sometimes be the same LSID provided as the argument to the method, if it is the most recent.

However, it is agnostic to the type of use, and can be built from SyMBA Subversion to have a different set of requirements and return types, so that you can customize it for your own purposes. 

SyMBA does much more than just provide some LSID services: it's a FuGE database, web interface, and API for loading and sharing FuGE-structured data and metadata for the life sciences. Contact us at symba-devel@lists.sourceforge.net or stop by the website for more information.</s:workflowdescription>
  <s:processor name="getMetadata">
    <s:description>Retrieves the LSID of the latest version of the Identifiable object that shares an Endurant with the given LSID (the input and output LSID may be identical). Also returns a timestamp indicating when the returned information is likely to expire. A null value indicates no known expiry date.

http://symba.sf.net</s:description>
    <s:arbitrarywsdl>
      <s:wsdl>http://bsu.ncl.ac.uk:8081/symba-lsid-ws-resolver/services/LsidDataRetriever?wsdl</s:wsdl>
      <s:operation>getMetadata</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="inputParametersXML">
    <s:description>The XML splitter for the input

http://symba.sf.net</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="getMetadata" name="parameters" qname="{http://service.webservices.lsid.symba.sourceforge.net/}getMetadata">
          <s:elements>
            <s:basetype optional="true" unbounded="false" typename="string" name="lsid" qname="getMetadata&gt;lsid" />
            <s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="acceptedFormats" qname="getMetadata&gt;acceptedFormats">
              <s:elementtype>
                <s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" />
              </s:elementtype>
            </s:arraytype>
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="outputParametersXML">
    <s:description>The xml splitter for the output.

http://symba.sf.net</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLOutputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="getMetadataResponse" name="parameters" qname="{http://service.webservices.lsid.symba.sourceforge.net/}getMetadataResponse">
          <s:elements>
            <s:complextype optional="true" unbounded="false" typename="lsidMetadataResponse" name="return" qname="getMetadataResponse&gt;return">
              <s:elements>
                <s:basetype optional="true" unbounded="false" typename="string" name="metadata" qname="lsidMetadataResponse&gt;metadata" />
                <s:basetype optional="true" unbounded="false" typename="dateTime" name="timestamp" qname="lsidMetadataResponse&gt;timestamp" />
              </s:elements>
            </s:complextype>
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="returnXML">
    <s:description>The xml splitter for the structure of the outputted metadata.

http://symba.sf.net</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLOutputSplitter
      <s:extensions>
        <s:complextype optional="true" unbounded="false" typename="lsidMetadataResponse" name="return" qname="getMetadataResponse&gt;return">
          <s:elements>
            <s:basetype optional="true" unbounded="false" typename="string" name="metadata" qname="lsidMetadataResponse&gt;metadata" />
            <s:basetype optional="true" unbounded="false" typename="dateTime" name="timestamp" qname="lsidMetadataResponse&gt;timestamp" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:link source="acceptedFormats" sink="inputParametersXML:acceptedFormats" />
  <s:link source="inputParametersXML:output" sink="getMetadata:parameters" />
  <s:link source="lsid" sink="inputParametersXML:lsid" />
  <s:link source="getMetadata:parameters" sink="outputParametersXML:input" />
  <s:link source="outputParametersXML:return" sink="returnXML:input" />
  <s:link source="returnXML:metadata" sink="metadataResponse" />
  <s:link source="returnXML:timestamp" sink="timestamp" />
  <s:source name="lsid">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>text/xml</s:mimeType>
      </s:mimeTypes>
      <s:description>The LSID you wish to get the data for.

http://symba.sf.net</s:description>
    </s:metadata>
  </s:source>
  <s:source name="acceptedFormats">
    <s:metadata>
      <s:description>The formats accepted by the user for dealing with the metadata response. Currently the WS can only deal with "application/rdf+xml" as an appropriate output. See the SyMBA subversion checkout and net.sourceforge.symba.lsid.webservices.client.LsidResolveAndRetrieveClient for examples of use.

http://symba.sf.net</s:description>
    </s:metadata>
  </s:source>
  <s:sink name="metadataResponse">
    <s:metadata>
      <s:description>RDF-formatted string containing a title and a (possibly-different) LSID. This metadata provides information to the user about the version status of the object referenced by the given LSID. If the object referenced by the LSID is the latest version of that part of SyMBA (i.e. the latest Identifiable associated with the shared Endurant), then the identical LSID will be returned. Otherwise, a new LSID will be provided in this metadata response, letting the user know that a more up-to-date version of the object (associated with the same Endurant) is available, should they wish to retrieve it.

http://symba.sf.net</s:description>
    </s:metadata>
  </s:sink>
  <s:sink name="timestamp">
    <s:metadata>
      <s:description>Will currently always return null, which signifies no expiration date for the LSID.

http://symba.sf.net</s:description>
    </s:metadata>
  </s:sink>
</s:scufl>

