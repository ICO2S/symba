 ---
 Setting Up the SyMBA databases and web interface
 ---
 Allyson Lister
 ---
 May 2008

Create databases to hold the metadata and security information

* Create an appropriate metadata database

                    Create a database inside your chosen DBMS entitled "symba". You will also need to have a database
                    user that is the owner of this database, e.g create a new user called "symba" that you use
                    specifically for accessing and modifying the SyMBA metadata and security database.
                    Modify the following elements in the top-level <<<pom.xml>>> located at
                    <<<your-checkout/trunk/pom.xml>>>. This will change the jdbc connection details to a value
                    suitable for your database connection, and also provide SyMBA with your database username and
                    password:

+---+
                    <jdbc.url>
                    </jdbc.url>

                    <jdbc.username></jdbc.username>
                    <jdbc.password></jdbc.password>
+---+

* Point Maven at the correct jdbc jar

                    Modify the following elements in the top-level <<<pom.xml>>> located at
                    <<<your-checkout/trunk/pom.xml>>> by pointing it to the appropriate location for your jdbc jar
                    and the appropriate class name for your jdbc driver:

+---+
                <jdbc.driver>
                </jdbc.driver>

                <jdbc.driver.jar>
                </jdbc.driver.jar>
+---+

  The values of these elements will depend on what database type you've chosen to use. For example, the value
  of <<jdbc.driver>> would be <<<org.postgresql.Driver>>> for PostgreSQL, and <<<com.mysql.jdbc.Driver>>> for
  MySQL.

* MySQL-specific additional changes

  If you are using MySQL, you also need to un-comment the <<<sql.mappings>>> element within the top-level <<<pom.xml>>>
  and fill it in as shown below (this field is case-sensitive):

+---+
          <sql.mappings>
          MySQL
          </sql.mappings>
+---+

  Then, open up <<<symba-mda/src/main/config/andromda.xml>>> and modify the value of the following option from its
  default PostgreSQL setting to what is shown below:

+---+
  <property name="sqlMappingsUri">${sql.mappings}
  </property>
+---+

* Create an appropriate security/login database

                    Create a security/login database inside your chosen DBMS entitled "symba_security", or anything else
                    you wish. There will be only one table within this database. This "USER" table will hold the login
                    details, and intentionally kept separate from the FuGE-based metadata database. The database table 
                    should be created with the following command if <<using PostgreSQL>>:

+---+
        create table users (
        user_name CHARACTER VARYING(1024) not null,
        password CHARACTER VARYING(1024) not null,
        lsid CHARACTER VARYING(1024) not null,

        primary key (lsid)
        );
+---+

  This SQL (for PostgreSQL) is also stored in the subversion checkout inside <<<symba-webapp/src/main/sql/create-security-table.sql>>>.

  You can use the following command if creating the USERS table with <<MySQL>> (Please note that the user that provided
  this code was using the InnoDB form of MySQL):

+---+
        CREATE TABLE `users` (
           `user_name` varchar(1024) NOT NULL,
           `password` varchar(1024) NOT NULL,
           `lsid` varchar(255) NOT NULL,
            PRIMARY KEY (`lsid`)
            ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
+---+

  If using another database type, please modify the above SQL accordingly.

 The <<user_name>> field stores what the login username will be for the user, while the <<password>> is the
 password for that user. The lsid is the Endurant LSID of the FuGE Person object as stored in the FuGE metadata
 database.
